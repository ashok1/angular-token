{"version":3,"file":"angular-token.mjs","sources":["../../../projects/angular-token/src/lib/angular-token.token.ts","../../../projects/angular-token/src/lib/angular-token.service.ts","../../../projects/angular-token/src/lib/angular-token.interceptor.ts","../../../projects/angular-token/src/lib/angular-token.module.ts","../../../projects/angular-token/src/angular-token.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const ANGULAR_TOKEN_OPTIONS = new InjectionToken('ANGULAR_TOKEN_OPTIONS');\n","import { Injectable, Optional, Inject, PLATFORM_ID } from '@angular/core';\nimport { ActivatedRoute, Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { isPlatformServer } from '@angular/common';\n\nimport { Observable, fromEvent, interval, BehaviorSubject } from 'rxjs';\nimport { pluck, filter, share, finalize } from 'rxjs/operators';\n\nimport { ANGULAR_TOKEN_OPTIONS } from './angular-token.token';\n\nimport {\n  SignInData,\n  RegisterData,\n  UpdatePasswordData,\n  ResetPasswordData,\n\n  UserType,\n  UserData,\n  AuthData,\n  ApiResponse,\n\n  AngularTokenOptions,\n\n  TokenPlatform,\n  TokenInAppBrowser,\n} from './angular-token.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularTokenService implements CanActivate {\n\n  get currentUserType(): string {\n    if (this.userType.value != null) {\n      return this.userType.value.name;\n    } else {\n      return undefined;\n    }\n  }\n\n  get currentUserData(): UserData {\n    return this.userData.value;\n  }\n\n  get currentAuthData(): AuthData {\n    return this.authData.value;\n  }\n\n  get apiBase(): string {\n    console.warn('[angular-token] The attribute .apiBase will be removed in the next major release, please use' +\n      '.tokenOptions.apiBase instead');\n    return this.options.apiBase;\n  }\n\n  get tokenOptions(): AngularTokenOptions {\n    return this.options;\n  }\n\n  set tokenOptions(options: AngularTokenOptions) {\n    this.options = (<any>Object).assign(this.options, options);\n  }\n\n  private options: AngularTokenOptions;\n  public userType: BehaviorSubject<UserType> = new BehaviorSubject<UserType>(null);\n  public authData: BehaviorSubject<AuthData> = new BehaviorSubject<AuthData>(null);\n  public userData: BehaviorSubject<UserData> = new BehaviorSubject<UserData>(null);\n  private global: Partial<Window>;\n\n  private localStorage: Storage | any = {};\n\n  constructor(\n    private http: HttpClient,\n    // \"any\" used here to assuage environments where type Window does not exist at build time.\n    // It's assigned to global in the constructor which has the proper typing.\n    @Inject('Window') private window: any,\n    @Inject(ANGULAR_TOKEN_OPTIONS) config: any,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() private activatedRoute: ActivatedRoute,\n    @Optional() private router: Router\n  ) {\n    this.global = (typeof this.window !== 'undefined') ? this.window : {};\n\n    if (isPlatformServer(this.platformId)) {\n\n      // Bad pratice, needs fixing\n      this.global = {\n        open: (): Window => null,\n        location: {\n          href: '/',\n          origin: '/'\n        } as any\n      };\n\n      // Bad pratice, needs fixing\n      this.localStorage.setItem = (): void => null;\n      this.localStorage.getItem = (): void => null;\n      this.localStorage.removeItem = (): void => null;\n    } else {\n      this.localStorage = localStorage;\n    }\n\n    const defaultOptions: AngularTokenOptions = {\n      apiPath: null,\n      apiBase: null,\n\n      signInPath: 'auth/sign_in',\n      signInRedirect: null,\n      signInStoredUrlStorageKey: null,\n\n      signOutPath: 'auth/sign_out',\n      validateTokenPath: 'auth/validate_token',\n      signOutFailedValidate: false,\n\n      registerAccountPath: 'auth',\n      deleteAccountPath: 'auth',\n      registerAccountCallback: this.global.location.href,\n\n      updatePasswordPath: 'auth',\n\n      resetPasswordPath: 'auth/password',\n      resetPasswordCallback: this.global.location.href,\n\n      userTypes: null,\n      loginField: 'email',\n\n      oAuthBase: this.global.location.origin,\n      oAuthPaths: {\n        github: 'auth/github'\n      },\n      oAuthCallbackPath: 'oauth_callback',\n      oAuthWindowType: 'newWindow',\n      oAuthWindowOptions: null,\n\n      oAuthBrowserCallbacks: {\n        github: 'auth/github/callback',\n      },\n    };\n\n    const mergedOptions = (<any>Object).assign(defaultOptions, config);\n    this.options = mergedOptions;\n\n    if (this.options.apiBase === null) {\n      console.warn(`[angular-token] You have not configured 'apiBase', which may result in security issues. ` +\n        `Please refer to the documentation at https://github.com/neroniaky/angular-token/wiki`);\n    }\n\n    this.tryLoadAuthData();\n  }\n\n  userSignedIn(): boolean {\n    if (this.authData.value == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (this.userSignedIn()) {\n      return true;\n    } else {\n      // Store current location in storage (usefull for redirection after signing in)\n      if (this.options.signInStoredUrlStorageKey) {\n        this.localStorage.setItem(\n          this.options.signInStoredUrlStorageKey,\n          state.url\n        );\n      }\n\n      // Redirect user to sign in if signInRedirect is set\n      if (this.router && this.options.signInRedirect) {\n        this.router.navigate([this.options.signInRedirect]);\n      }\n\n      return false;\n    }\n  }\n\n\n  /**\n   *\n   * Actions\n   *\n   */\n\n  // Register request\n  registerAccount(registerData: RegisterData, additionalData?: any): Observable<ApiResponse> {\n\n    registerData = Object.assign({}, registerData);\n\n    if (registerData.userType == null) {\n      this.userType.next(null);\n    } else {\n      this.userType.next(this.getUserTypeByName(registerData.userType));\n      delete registerData.userType;\n    }\n\n    if (\n      registerData.password_confirmation == null &&\n      registerData.passwordConfirmation != null\n    ) {\n      registerData.password_confirmation = registerData.passwordConfirmation;\n      delete registerData.passwordConfirmation;\n    }\n\n    if (additionalData !== undefined) {\n      registerData.additionalData = additionalData;\n    }\n\n    const login = registerData.login;\n    delete registerData.login;\n    registerData[this.options.loginField] = login;\n\n    registerData.confirm_success_url = this.options.registerAccountCallback;\n\n    return this.http.post<ApiResponse>(\n      this.getServerPath() + this.options.registerAccountPath, registerData\n    );\n  }\n\n  // Delete Account\n  deleteAccount(): Observable<ApiResponse> {\n    return this.http.delete<ApiResponse>(this.getServerPath() + this.options.deleteAccountPath);\n  }\n\n  // Sign in request and set storage\n  signIn(signInData: SignInData, additionalData?: any): Observable<ApiResponse> {\n    this.userType.next((signInData.userType == null) ? null : this.getUserTypeByName(signInData.userType));\n\n    const body = {\n      [this.options.loginField]: signInData.login,\n      password: signInData.password\n    };\n\n    if (additionalData !== undefined) {\n      body['additionalData'] = additionalData;\n    }\n\n    const observ = this.http.post<ApiResponse>(\n      this.getServerPath() + this.options.signInPath, body\n    ).pipe(share());\n\n    observ.subscribe(res => this.userData.next(res.data));\n\n    return observ;\n  }\n\n  signInOAuth(oAuthType: string, inAppBrowser?: TokenInAppBrowser<any, any>, platform?: TokenPlatform) {\n\n    const oAuthPath: string = this.getOAuthPath(oAuthType);\n    const callbackUrl: string = new URL(this.options.oAuthCallbackPath, this.global.location.origin).href;\n    const oAuthWindowType: string = this.options.oAuthWindowType;\n    const authUrl: string = this.getOAuthUrl(oAuthPath, callbackUrl, oAuthWindowType);\n\n    if (oAuthWindowType === 'newWindow' ||\n      (oAuthWindowType == 'inAppBrowser' && (!platform || !platform.is('cordova') || !(platform.is('ios') || platform.is('android'))))) {\n      const oAuthWindowOptions = this.options.oAuthWindowOptions;\n      let windowOptions = '';\n\n      if (oAuthWindowOptions) {\n        for (const key in oAuthWindowOptions) {\n          if (oAuthWindowOptions.hasOwnProperty(key)) {\n            windowOptions += `,${key}=${oAuthWindowOptions[key]}`;\n          }\n        }\n      }\n\n      const popup = this.window.open(\n        authUrl,\n        '_blank',\n        `closebuttoncaption=Cancel${windowOptions}`\n      );\n      return this.requestCredentialsViaPostMessage(popup);\n    } else if (oAuthWindowType == 'inAppBrowser') {\n      let oAuthBrowserCallback = this.options.oAuthBrowserCallbacks[oAuthType];\n      if (!oAuthBrowserCallback) {\n        throw new Error(`To login with oAuth provider ${oAuthType} using inAppBrowser the callback (in oAuthBrowserCallbacks) is required.`);\n      }\n      // let oAuthWindowOptions = this.options.oAuthWindowOptions;\n      // let windowOptions = '';\n\n      //  if (oAuthWindowOptions) {\n      //     for (let key in oAuthWindowOptions) {\n      //         windowOptions += `,${key}=${oAuthWindowOptions[key]}`;\n      //     }\n      // }\n\n      let browser = inAppBrowser.create(\n        authUrl,\n        '_blank',\n        'location=no'\n      );\n\n      return new Observable((observer) => {\n        browser.on('loadstop').subscribe((ev: any) => {\n          if (ev.url.indexOf(oAuthBrowserCallback) > -1) {\n            browser.executeScript({ code: \"requestCredentials();\" }).then((credentials: any) => {\n              this.getAuthDataFromPostMessage(credentials[0]);\n\n              let pollerObserv = interval(400);\n\n              let pollerSubscription = pollerObserv.subscribe(() => {\n                if (this.userSignedIn()) {\n                  observer.next(this.authData);\n                  observer.complete();\n\n                  pollerSubscription.unsubscribe();\n                  browser.close();\n                }\n              }, (error: any) => {\n                observer.error(error);\n                observer.complete();\n              });\n            }, (error: any) => {\n              observer.error(error);\n              observer.complete();\n            });\n          }\n        }, (error: any) => {\n          observer.error(error);\n          observer.complete();\n        });\n      })\n    } else if (oAuthWindowType === 'sameWindow') {\n      this.global.location.href = authUrl;\n      return undefined;\n    } else {\n      throw new Error(`Unsupported oAuthWindowType \"${oAuthWindowType}\"`);\n    }\n  }\n\n  processOAuthCallback(): void {\n    this.getAuthDataFromParams();\n  }\n\n  // Sign out request and delete storage\n  signOut(): Observable<ApiResponse> {\n    return this.http.delete<ApiResponse>(this.getServerPath() + this.options.signOutPath)\n      // Only remove the localStorage and clear the data after the call\n      .pipe(\n        finalize(() => {\n          this.localStorage.removeItem('accessToken');\n          this.localStorage.removeItem('client');\n          this.localStorage.removeItem('expiry');\n          this.localStorage.removeItem('tokenType');\n          this.localStorage.removeItem('uid');\n\n          this.authData.next(null);\n          this.userType.next(null);\n          this.userData.next(null);\n        }\n        )\n      );\n  }\n\n  // Validate token request\n  validateToken(): Observable<ApiResponse> {\n    const observ = this.http.get<ApiResponse>(\n      this.getServerPath() + this.options.validateTokenPath\n    ).pipe(share());\n\n    observ.subscribe(\n      (res) => this.userData.next(res.data),\n      (error) => {\n        if (error.status === 401 && this.options.signOutFailedValidate) {\n          this.signOut();\n        }\n      });\n\n    return observ;\n  }\n\n  // Update password request\n  updatePassword(updatePasswordData: UpdatePasswordData): Observable<ApiResponse> {\n\n    if (updatePasswordData.userType != null) {\n      this.userType.next(this.getUserTypeByName(updatePasswordData.userType));\n    }\n\n    let args: any;\n\n    if (updatePasswordData.passwordCurrent == null) {\n      args = {\n        password: updatePasswordData.password,\n        password_confirmation: updatePasswordData.passwordConfirmation\n      };\n    } else {\n      args = {\n        current_password: updatePasswordData.passwordCurrent,\n        password: updatePasswordData.password,\n        password_confirmation: updatePasswordData.passwordConfirmation\n      };\n    }\n\n    if (updatePasswordData.resetPasswordToken) {\n      args.reset_password_token = updatePasswordData.resetPasswordToken;\n    }\n\n    const body = args;\n    return this.http.put<ApiResponse>(this.getServerPath() + this.options.updatePasswordPath, body);\n  }\n\n  // Reset password request\n  resetPassword(resetPasswordData: ResetPasswordData, additionalData?: any): Observable<ApiResponse> {\n\n\n    if (additionalData !== undefined) {\n      resetPasswordData.additionalData = additionalData;\n    }\n\n    this.userType.next(\n      (resetPasswordData.userType == null) ? null : this.getUserTypeByName(resetPasswordData.userType)\n    );\n\n    const body = {\n      [this.options.loginField]: resetPasswordData.login,\n      redirect_url: this.options.resetPasswordCallback\n    };\n\n    return this.http.post<ApiResponse>(this.getServerPath() + this.options.resetPasswordPath, body);\n  }\n\n\n  /**\n   *\n   * Construct Paths / Urls\n   *\n   */\n\n  private getUserPath(): string {\n    return (this.userType.value == null) ? '' : this.userType.value.path + '/';\n  }\n\n  private addTrailingSlashIfNeeded(url: string): string {\n    const lastChar = url[url.length - 1];\n\n    return lastChar === '/' ? url : url + '/';\n  }\n\n  private getApiPath(): string {\n    let constructedPath = '';\n\n    if (this.options.apiBase != null) {\n      constructedPath += this.addTrailingSlashIfNeeded(this.options.apiBase);\n    }\n\n    if (this.options.apiPath != null) {\n      constructedPath += this.addTrailingSlashIfNeeded(this.options.apiPath);\n    }\n\n    return constructedPath;\n  }\n\n  private getServerPath(): string {\n    return this.getApiPath() + this.getUserPath();\n  }\n\n  private getOAuthPath(oAuthType: string): string {\n    let oAuthPath: string;\n\n    oAuthPath = this.options.oAuthPaths[oAuthType];\n\n    if (oAuthPath == null) {\n      oAuthPath = `/auth/${oAuthType}`;\n    }\n\n    return oAuthPath;\n  }\n\n  private getOAuthUrl(oAuthPath: string, callbackUrl: string, windowType: string): string {\n    let url = new URL(\n      `${oAuthPath}?omniauth_window_type=${windowType}&auth_origin_url=${encodeURIComponent(callbackUrl)}`,\n      this.options.oAuthBase\n    ).href\n\n    if (this.userType.value != null) {\n      url += `&resource_class=${this.userType.value.name}`;\n    }\n\n    return url;\n  }\n\n\n  /**\n   *\n   * Get Auth Data\n   *\n   */\n\n  // Try to load auth data\n  private tryLoadAuthData(): void {\n\n    const userType = this.getUserTypeByName(this.localStorage.getItem('userType'));\n\n    if (userType) {\n      this.userType.next(userType);\n    }\n\n    this.getAuthDataFromStorage();\n\n    if (this.activatedRoute) {\n      this.getAuthDataFromParams();\n    }\n\n    // if (this.authData) {\n    //     this.validateToken();\n    // }\n  }\n\n  // Parse Auth data from response\n  public getAuthHeadersFromResponse(data: HttpResponse<any> | HttpErrorResponse): void {\n    const headers = data.headers;\n\n    const authData: AuthData = {\n      accessToken: headers.get('access-token'),\n      client: headers.get('client'),\n      expiry: headers.get('expiry'),\n      tokenType: headers.get('token-type'),\n      uid: headers.get('uid')\n    };\n\n    this.setAuthData(authData);\n  }\n\n  // Parse Auth data from post message\n  private getAuthDataFromPostMessage(data: any): void {\n    const authData: AuthData = {\n      accessToken: data['auth_token'],\n      client: data['client_id'],\n      expiry: data['expiry'],\n      tokenType: 'Bearer',\n      uid: data['uid']\n    };\n\n    this.setAuthData(authData);\n  }\n\n  // Try to get auth data from storage.\n  public getAuthDataFromStorage(): void {\n\n    const authData: AuthData = {\n      accessToken: this.localStorage.getItem('accessToken'),\n      client: this.localStorage.getItem('client'),\n      expiry: this.localStorage.getItem('expiry'),\n      tokenType: this.localStorage.getItem('tokenType'),\n      uid: this.localStorage.getItem('uid')\n    };\n\n    if (this.checkAuthData(authData)) {\n      this.authData.next(authData);\n    }\n  }\n\n  // Try to get auth data from url parameters.\n  private getAuthDataFromParams(): void {\n    this.activatedRoute.queryParams.subscribe(queryParams => {\n      const authData: AuthData = {\n        accessToken: queryParams['token'] || queryParams['auth_token'],\n        client: queryParams['client_id'],\n        expiry: queryParams['expiry'],\n        tokenType: 'Bearer',\n        uid: queryParams['uid']\n      };\n\n      if (this.checkAuthData(authData)) {\n        this.authData.next(authData);\n      }\n    });\n  }\n\n  /**\n   *\n   * Set Auth Data\n   *\n   */\n\n  // Write auth data to storage\n  private setAuthData(authData: AuthData): void {\n    if (this.checkAuthData(authData)) {\n\n      this.authData.next(authData);\n\n      this.localStorage.setItem('accessToken', authData.accessToken);\n      this.localStorage.setItem('client', authData.client);\n      this.localStorage.setItem('expiry', authData.expiry);\n      this.localStorage.setItem('tokenType', authData.tokenType);\n      this.localStorage.setItem('uid', authData.uid);\n\n      if (this.userType.value != null) {\n        this.localStorage.setItem('userType', this.userType.value.name);\n      }\n\n    }\n  }\n\n\n  /**\n   *\n   * Validate Auth Data\n   *\n   */\n\n  // Check if auth data complete and if response token is newer\n  private checkAuthData(authData: AuthData): boolean {\n\n    if (\n      authData.accessToken != null &&\n      authData.client != null &&\n      authData.expiry != null &&\n      authData.tokenType != null &&\n      authData.uid != null\n    ) {\n      if (this.authData.value != null) {\n        return authData.expiry >= this.authData.value.expiry;\n      }\n      return true;\n    }\n    return false;\n  }\n\n\n  /**\n   *\n   * OAuth\n   *\n   */\n\n  private requestCredentialsViaPostMessage(authWindow: any): Observable<any> {\n    const pollerObserv = interval(500);\n\n    const responseObserv = fromEvent(this.global as any, 'message').pipe(\n      pluck('data'),\n      filter(this.oAuthWindowResponseFilter)\n    );\n\n    responseObserv.subscribe(\n      this.getAuthDataFromPostMessage.bind(this)\n    );\n\n    const pollerSubscription = pollerObserv.subscribe(() => {\n      if (authWindow.closed) {\n        pollerSubscription.unsubscribe();\n      } else {\n        authWindow.postMessage('requestCredentials', '*');\n      }\n    });\n\n    return responseObserv;\n  }\n\n  private oAuthWindowResponseFilter(data: any): any {\n    if (data.message === 'deliverCredentials' || data.message === 'authFailure') {\n      return data;\n    }\n  }\n\n\n  /**\n   *\n   * Utilities\n   *\n   */\n\n  // Match user config by user config name\n  private getUserTypeByName(name: string): UserType {\n    if (name == null || this.options.userTypes == null) {\n      return null;\n    }\n\n    return this.options.userTypes.find(\n      userType => userType.name === name\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpRequest, HttpInterceptor, HttpHandler, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { AngularTokenService } from './angular-token.service';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class AngularTokenInterceptor implements HttpInterceptor {\n\n  constructor( private tokenService: AngularTokenService ) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    // Get auth data from local storage\n    this.tokenService.getAuthDataFromStorage();\n\n    // Add the headers if the request is going to the configured server\n    const authData = this.tokenService.authData.value;\n\n    if (authData &&\n      (this.tokenService.tokenOptions.apiBase === null || req.url.match(this.tokenService.tokenOptions.apiBase))) {\n\n      const headers = {\n        'access-token': authData.accessToken,\n        'client':       authData.client,\n        'expiry':       authData.expiry,\n        'token-type':   authData.tokenType,\n        'uid':          authData.uid\n      };\n\n      req = req.clone({\n        setHeaders: headers\n      });\n    }\n\n    return next.handle(req).pipe(tap(\n        res => this.handleResponse(res),\n        err => this.handleResponse(err)\n    ));\n  }\n\n\n  // Parse Auth data from response\n  private handleResponse(res: HttpResponse<any> | HttpErrorResponse | HttpEvent<any>): void {\n    if (res instanceof HttpResponse || res instanceof HttpErrorResponse) {\n      if (this.tokenService.tokenOptions.apiBase === null || (res.url && res.url.match(this.tokenService.tokenOptions.apiBase))) {\n        this.tokenService.getAuthHeadersFromResponse(res);\n      }\n    }\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { AngularTokenInterceptor } from './angular-token.interceptor';\nimport { AngularTokenOptions } from './angular-token.model';\nimport { ANGULAR_TOKEN_OPTIONS } from './angular-token.token';\n\nexport * from './angular-token.service';\n\n@NgModule()\nexport class AngularTokenModule {\n\n  constructor(@Optional() @SkipSelf() parentModule: AngularTokenModule) {\n    if (parentModule) {\n      throw new Error('AngularToken is already loaded. It should only be imported in your application\\'s main module.');\n    }\n  }\n  static forRoot(options: AngularTokenOptions): ModuleWithProviders<AngularTokenModule> {\n    return {\n      ngModule: AngularTokenModule,\n      providers: [\n        {\n          provide: 'Window',\n          useValue: window\n        },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: AngularTokenInterceptor,\n          multi: true\n        },\n        options.angularTokenOptionsProvider ||\n        {\n          provide: ANGULAR_TOKEN_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.AngularTokenService"],"mappings":"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"}